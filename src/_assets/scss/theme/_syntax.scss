/*! purgecss start ignore */

//
// Syntax highlight
//

// https://github.com/mohd-akram/base16-pygments/blob/master/pygments_base16/base16-one-light.py
:root {
  --base00: #fafafa;
  --base01: #f0f0f1;
  --base02: #e5e5e6;
  --base03: #a0a1a7;
  --base04: #696c77;
  --base05: #383a42;
  --base06: #202227;
  --base07: #090a0b;
  --base08: #ca1243;
  --base09: #d75f00;
  --base0a: #c18401;
  --base0b: #50a14f;
  --base0c: #0184bc;
  --base0d: #4078f2;
  --base0e: #a626a4;
  --base0f: #986801;

  // https://github.com/mohd-akram/base16-pygments/blob/master/pygments_base16/base16-onedark.py
  @media (prefers-color-scheme: dark) {
    --base00: #282c34;
    --base01: #353b45;
    --base02: #3e4451;
    --base03: #545862;
    --base04: #565c64;
    --base05: #abb2bf;
    --base06: #b6bdca;
    --base07: #c8ccd4;
    --base08: #e06c75;
    --base09: #d19a66;
    --base0a: #e5c07b;
    --base0b: #98c379;
    --base0c: #56b6c2;
    --base0d: #61afef;
    --base0e: #c678dd;
    --base0f: #be5046;
  }
}

// Inline and block code styles
code,
kbd,
pre,
samp {
  font-family: var(--font-monospace);
}

// Inline code snippets
code {
  padding: 0; // don't add padding, gives scrollbars
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: var(--pre-bg); // rgba(0, 0, 0, .04);
  border-radius: 0.25rem; // 3px;

  &::before,
  &::after {
    letter-spacing: -0.2em; // this creates padding
    content: "\00a0";
  }

  br {
    display: none;
  }
}

del code {
  text-decoration: inherit;
}

pre {
  // padding: 20px;
  // margin: 0;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  word-break: normal;
  word-wrap: normal;
  background-color: var(--pre-bg); // #f7f7f7
  border-radius: 0.25rem; // 3px;
  -webkit-font-smoothing: subpixel-antialiased;
}

// Code tags within code blocks (<pre>s)
pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  font-size: 100%;
  line-height: inherit;
  word-break: normal;
  word-wrap: normal;
  white-space: pre;
  background-color: transparent;
  border: 0;

  &::before,
  &::after {
    content: normal;
  }
}

kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #555;
  vertical-align: middle;
  background-color: #fcfcfc;
  border: solid 1px #ccc;
  border-bottom-color: #bbb;
  border-radius: 0.25rem; // 3px;
  box-shadow: inset 0 -1px 0 #bbb;
}

.highlight pre {
  // width: 100%;
  padding: $bs--gutter-x; // 0.75rem 15px;
  margin-right: -$bs--gutter-x; // -0.75rem; // -15px;
  margin-left: -$bs--gutter-x; // -0.75rem; // -15px;

  @media (min-width: 576px) {
    padding-left: $bs--gutter-x - 0.25rem; // calc($bs--gutter-x - $border-left);
    margin-right: 0;
    margin-left: 0;
    border-left: 0.25rem solid var(--code-snippet-border);
  }
}

.highlight .hll {
  background-color: var(--base06);
}

// stylelint-disable
.highlight {
  .c {
    /* Comment */
    color: var(--base04);
  }
  .err {
    /* Error */
    color: var(--base08);
  }
  .k {
    /* Keyword */
    color: var(--base0e);
  }
  .l {
    /* Literal */
    color: var(--base09);
  }
  .n {
    /* Name */
    color: var(--base05);
  }
  .o {
    /* Operator */
    color: var(--base0c);
  }
  .p {
    /* Punctuation */
    color: var(--base05);
  }
  .cm {
    /* Comment.Multiline */
    color: var(--base04);
  }
  .cp {
    /* Comment.Preproc */
    color: var(--base04);
  }
  .c1 {
    /* Comment.Single */
    color: var(--base04);
  }
  .cs {
    /* Comment.Special */
    color: var(--base04);
  }
  .gd {
    /* Generic.Deleted */
    color: var(--base08);
  }
  .ge {
    /* Generic.Emph */
    font-style: italic;
  }
  .gh {
    /* Generic.Heading */
    color: var(--base05);
    font-weight: bold;
  }
  .gi {
    /* Generic.Inserted */
    color: var(--base0b);
  }
  .gp {
    /* Generic.Prompt */
    color: var(--base04);
    font-weight: bold;
  }
  .gs {
    /* Generic.Strong */
    font-weight: bold;
  }
  .gu {
    /* Generic.Subheading */
    color: var(--base0c);
    font-weight: bold;
  }
  .kc {
    /* Keyword.Constant */
    color: var(--base0e);
  }
  .kd {
    /* Keyword.Declaration */
    color: var(--base0e);
  }
  .kn {
    /* Keyword.Namespace */
    color: var(--base0c);
  }
  .kp {
    /* Keyword.Pseudo */
    color: var(--base0e);
  }
  .kr {
    /* Keyword.Reserved */
    color: var(--base0e);
  }
  .kt {
    /* Keyword.Type */
    color: var(--base0a);
  }
  .ld {
    /* Literal.Date */
    color: var(--base0b);
  }
  .m {
    /* Literal.Number */
    color: var(--base09);
  }
  .s {
    /* Literal.String */
    color: var(--base0b);
  }
  .na {
    /* Name.Attribute */
    color: var(--base0d);
  }
  .nb {
    /* Name.Builtin */
    color: var(--base05);
  }
  .nc {
    /* Name.Class */
    color: var(--base0a);
  }
  .no {
    /* Name.Constant */
    color: var(--base08);
  }
  .nd {
    /* Name.Decorator */
    color: var(--base0c);
  }
  .ni {
    /* Name.Entity */
    color: var(--base05);
  }
  .ne {
    /* Name.Exception */
    color: var(--base08);
  }
  .nf {
    /* Name.Function */
    color: var(--base0d);
  }
  .nl {
    /* Name.Label */
    color: var(--base05);
  }
  .nn {
    /* Name.Namespace */
    color: var(--base0a);
  }
  .nx {
    /* Name.Other */
    color: var(--base0d);
  }
  .py {
    /* Name.Property */
    color: var(--base05);
  }
  .nt {
    /* Name.Tag */
    color: var(--base0c);
  }
  .nv {
    /* Name.Variable */
    color: var(--base08);
  }
  .ow {
    /* Operator.Word */
    color: var(--base0c);
  }
  .w {
    /* Text.Whitespace */
    color: var(--base05);
  }
  .mf {
    /* Literal.Number.Float */
    color: var(--base09);
  }
  .mh {
    /* Literal.Number.Hex */
    color: var(--base09);
  }
  .mi {
    /* Literal.Number.Integer */
    color: var(--base09);
  }
  .mo {
    /* Literal.Number.Oct */
    color: var(--base09);
  }
  .sb {
    /* Literal.String.Backtick */
    color: var(--base0b);
  }
  .sc {
    /* Literal.String.Char */
    color: var(--base05);
  }
  .sd {
    /* Literal.String.Doc */
    color: var(--base04);
  }
  .s2 {
    /* Literal.String.Double */
    color: var(--base0b);
  }
  .se {
    /* Literal.String.Escape */
    color: var(--base09);
  }
  .sh {
    /* Literal.String.Heredoc */
    color: var(--base0b);
  }
  .si {
    /* Literal.String.Interpol */
    color: var(--base09);
  }
  .sx {
    /* Literal.String.Other */
    color: var(--base0b);
  }
  .sr {
    /* Literal.String.Regex */
    color: var(--base0b);
  }
  .s1 {
    /* Literal.String.Single */
    color: var(--base0b);
  }
  .ss {
    /* Literal.String.Symbol */
    color: var(--base0b);
  }
  .bp {
    /* Name.Builtin.Pseudo */
    color: var(--base05);
  }
  .vc {
    /* Name.Variable.Class */
    color: var(--base08);
  }
  .vg {
    /* Name.Variable.Global */
    color: var(--base08);
  }
  .vi {
    /* Name.Variable.Instance */
    color: var(--base08);
  }
  .il {
    /* Literal.Number.Integer.Long */
    color: var(--base09);
  }
}
// stylelint-enable

.gist {
  th,
  td {
    border-bottom: 0;
  }
}

/*! purgecss end ignore */
